(()=>{"use strict";var t={760:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Equation=void 0;const s=i(38),n=i(506),r=i(330),o=i(956);class h{constructor(...t){if(this._varnothing="\\varnothing",this._real="\\mathbb{R}",this.parse=t=>{let e,i;if(i=this._findSign(t),!1!==i)return e=t.split(i),this.create(new s.Polynom(e[0]),new s.Polynom(e[1]),this._formatSign(i));console.log("The equation is not valid (no sign found)")},this._findSign=t=>t.includes("geq")?t.includes("\\geq")?"\\geq":"geq":t.includes("leq")?t.includes("\\leq")?"\\leq":"leq":t.includes(">=")?">=":t.includes("=>")?"=>":t.includes(">")?">":t.includes("<=")?"<=":t.includes("=<")?"=<":t.includes("<")?"<":t.includes("=")?"=":(console.log("Equation: parse string : sign not found"),!1),this._formatSign=t=>void 0===t?"=":t.includes("geq")||t.includes(">=")||t.includes("=>")?">=":t.includes(">")?">":t.includes("leq")||t.includes("<=")||t.includes("=<")?"<=":t.includes("<")?"<":"=",this._reverseSign=()=>"="===this._sign?this:this._sign.includes("<")?(this._sign.replace("<",">"),this):this._sign.includes(">")?(this._sign.replace(">","<"),this):this,this.create=(t,e,i)=>(this._left=t,this._right=e,this._sign=this._formatSign(i),this),this.clone=()=>(new h).create(this._left.clone(),this._right.clone(),this._sign+""),this._randomizeDefaults={degree:2},this.randomize=(t,e)=>(new h).create(new s.Polynom,new s.Polynom,e),this.reorder=t=>{if(this._left.subtract(this._right),this._right.zero(),t)return this;let e;for(let t of this._left.monoms)0===t.degree()&&(e=t.clone(),this._left.subtract(e),this._right.subtract(e));return this._left.reorder(),this._right.reorder(),this},this.simplify=()=>(this.multiply(o.Numeric.lcm(...this._left.getDenominators(),...this._right.getDenominators())),this.divide(o.Numeric.gcd(...this._left.getNumerators(),...this._right.getNumerators())),this),this.isolate=t=>{if(1!==this.degree(t))return!1;if(this.isMultiVariable())return!1;let e,i;this._left.subtract(this._right),this._right.zero();for(let i of this._left.monoms)i.hasLetter(t)||(e=i.clone(),this._left.add(e.clone().opposed()),this._right.add(e.clone().opposed()));return 1===this._left.length&&(i=this._left.monoms[0].coefficient.clone(),this._left.divide(i),this._right.divide(i),this)},this.multiply=t=>{let e=new n.Fraction(t);return this._left.multiply(e),this._right.multiply(e),"="!==this._sign&&-1===e.sign()&&this._reverseSign(),this},this.divide=t=>{let e=new n.Fraction(t);return e.isZero()?this:this.multiply(e.invert())},this.degree=t=>Math.max(this._left.degree(t),this._right.degree(t)),this.isMultiVariable=()=>this._left.isMultiVariable||this._right.isMultiVariable,this.letters=()=>[...new Set([...this._left.letters(),...this._right.letters()])],this.solve=t=>{switch(this._solutions=[],this._polynom=this._left.clone().subtract(this._right),this._polynom.degree(t)){case 0:case 1:this._solveDegree1(t);break;case 2:this._solveDegree2(t);break;default:this._solveDegree3plus(t)}return this},this.isGreater=()=>-1!==this._sign.indexOf(">")||-1!==this._sign.indexOf("geq"),this.isStrictEqual=()=>"="===this._sign,this.isAlsoEqual=()=>-1!==this._sign.indexOf("=")||-1!==this._sign.indexOf("geq")||-1!==this._sign.indexOf("leq")||void 0,this._solveDegree1=t=>{const e=this._polynom.monomByDegree(1,t).coefficient,i=this._polynom.monomByDegree(0,t).coefficient,s=i.clone().opposed().divide(e).display;let n;return this.isStrictEqual()?0===e.value?0===i.value?this._solutions=[this._real]:this._solutions=[this._varnothing]:this._solutions=[s]:(n=0===e.value?0===i.value&&this.isAlsoEqual()?"\\mathbb{R}":i.value>0?this.isGreater()?this._real:this._varnothing:this.isGreater()?this._varnothing:this._real:this.isGreater()&&1===e.sign()||!this.isGreater()&&-1===e.sign()?`\\left${this.isAlsoEqual()?"\\[":"\\]"}${s};+\\infty\\right\\[`:`\\left\\]-\\infty;${s} \\right\\${this.isAlsoEqual()?"\\]":"\\["}`,this._solutions=[n]),this._solutions},this._solveDegree2=t=>{let e,i,s,h,l,a,u=this._polynom.monomByDegree(2,t).coefficient,c=this._polynom.monomByDegree(1,t).coefficient,m=this._polynom.monomByDegree(0,t).coefficient,_=o.Numeric.lcm(u.denominator,c.denominator,m.denominator),f=u.multiply(_).value,d=c.multiply(_).value;if(e=d*d-4*f*m.multiply(_).value,e>0)if(s=(-d-Math.sqrt(e))/(2*f),h=(-d+Math.sqrt(e))/(2*f),e>1e5)this._solutions=[((-d-Math.sqrt(e))/(2*f)).toFixed(5),((-d+Math.sqrt(e))/(2*f)).toFixed(5)];else if(i=(new r.Nthroot).parse(e).reduce(),i.hasRadical()){let t=o.Numeric.gcd(d,2*f,i.coefficient);i.coefficient=i.coefficient/t,this._solutions=0!==d?2*f/t==1?[`${-d/t} - ${i.tex}`,`${-d/t} + ${i.tex}`]:[`\\dfrac{${-d/t} - ${i.tex} }{ ${2*f/t} }`,`\\dfrac{${-d/t} + ${i.tex} }{ ${2*f/t} }`]:2*f/t==1?[`- ${i.tex}`,`${i.tex}`]:[`\\dfrac{- ${i.tex} }{ ${2*f/t} }`,`\\dfrac{${i.tex} }{ ${2*f/t} }`]}else this._solutions=[new n.Fraction(-d-i.coefficient,2*f).reduce().dfrac,new n.Fraction(-d+i.coefficient,2*f).reduce().dfrac];else this._solutions=0===e?[new n.Fraction(-d,2*f).reduce().dfrac]:[this._varnothing];return this.isStrictEqual()||(2===this._solutions.length?(l=s<h?this._solutions[0]:this._solutions[1],a=s<h?this._solutions[1]:this._solutions[0],this.isGreater()&&1===u.sign()||!this.isGreater()&&-1===u.sign()?this._solutions=[`\\left]-\\infty ; ${l}\\right${this.isAlsoEqual()?"]":"["} \\cup \\left${this.isAlsoEqual()?"[":"]"}${a};+\\infty\\right[`]:this._solutions=[`\\left${this.isAlsoEqual()?"[":"]"}${l} ; ${a}\\right${this.isAlsoEqual()?"]":"["}`]):1===this._solutions.length&&this._solutions[0]!==this._varnothing?this.isAlsoEqual()?(this.isGreater()&&1===u.sign()||!this.isGreater()&&-1===u.sign())&&(this._solutions=[this._real]):this.isGreater()&&1===u.sign()||!this.isGreater()&&-1===u.sign()?this._solutions=[`\\left]-\\infty ; ${this._solutions[0]}\\right[ \\cup \\left]${this._solutions[0]};+\\infty\\right[`]:this._solutions=[this._varnothing]:this.isGreater()?this._solutions=[1===u.sign()?this._real:this._varnothing]:this._solutions=[-1===u.sign()?this._real:this._varnothing]),this._solutions},this._solveDegree3plus=t=>(this._solutions=[t],this._solutions),this._left=(new s.Polynom).zero(),this._right=(new s.Polynom).zero(),this._sign="=",1===t.length){if(!0===t[0].isEquation)return t[0].clone();this.parse(t[0])}else{if(2!==t.length)return this;this.left=t[0].isPolynom?t[0].clone():new s.Polynom(t[0]),this.right=t[1].isPolynom?t[1].clone():new s.Polynom(t[1])}return this}get isEquation(){return!0}get solutions(){return this._solutions}get solution(){return 1!==this._solutions.length||this._solutions[0]!==this._real&&this._solutions[0]!==this._varnothing&&!this._solutions[0].includes("\\left")?`S = \\left{ ${this._solutions.join(";")} \\right}`:`S = ${this._solutions[0]}`}get isReal(){return void 0===this._solutions&&this.solve(),this._solutions[0]===this._real}get isVarnothing(){return void 0===this._solutions&&this.solve(),this._solutions[0]===this._varnothing}get signAsTex(){return">="===this._sign||"=>"===this._sign||"geq"===this._sign?"\\geq":"<="===this._sign||"=<"===this._sign||"leq"===this._sign?"\\leq":this._sign}get tex(){return`${this._left.tex}${this.signAsTex}${this._right.tex}`}get raw(){return`${this._left.raw}${this.signAsTex}${this._right.raw}`}get variables(){return[...new Set(this._right.variables.concat(this._left.variables))]}get numberOfVars(){return this.variables.length}get left(){return this._left}set left(t){this._left=t}get right(){return this._right}set right(t){this._right=t}get sign(){return this._sign}set sign(t){this._sign=this._formatSign(t)}get randomizeDefaults(){return this._randomizeDefaults}set randomizeDefaults(t){this._randomizeDefaults=t}}e.Equation=h},554:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.LinearSystem=void 0;const s=i(506),n=i(760),r=i(956),o=i(38);class h{constructor(...t){return this.parse=(...t)=>(this._equations=t.map((t=>new n.Equation(t))),this._findLetters(),this),this.setCoefficient=(...t)=>{this._equations=[];let e=0;for(;e<t.length-this._letters.length;){let i=(new o.Polynom).parse(this._letters.join(""),...t.slice(e,e+this._letters.length)),s=new o.Polynom(t[e+this._letters.length].toString()),r=(new n.Equation).create(i,s);this._equations.push(r.clone()),e=e+this._letters.length+1}return this},this.clone=()=>(new h).parse(...this._equations.map((t=>t.clone()))),this.setLetters=(...t)=>(this._letters=t,this),this._findLetters=()=>{let t=new Set;for(let e of this._equations)t=new Set([...t,...e.variables]);return this._letters=[...t],this},this.generate=(...t)=>{let e=[];for(let i of t)"number"==typeof i?e.push(new s.Fraction(i.toString())):e.push(i.clone());this._equations=[];for(let i=0;i<t.length;i++)this._equations.push(this._generateOneEquation(...e));return this},this._generateOneEquation=(...t)=>{let e,i=[],o=(new s.Fraction).zero(),h=["x","y","z","t","u","v","w","a","b","c","d","e","f","g","h","i","j","k","l"],l="";for(let e=0;e<t.length;e++)i.push(r.Numeric.randomIntSym(5)),o.add(t[e].clone().multiply(i[e])),l+=`${i[e]<0?i[e]:"+"+i[e]}${h[e]}`;return e=new n.Equation(`${l}=${o.display}`),1!=e.right.monoms[0].coefficient.denominator&&e.multiply(new s.Fraction(e.right.monoms[0].coefficient.denominator,1)),this._checkIfLinerCombination(e)?e:this._generateOneEquation(...t)},this.mergeEquations=(t,e,i,n)=>{let r=t.clone().multiply(new s.Fraction(i)),o=e.clone().multiply(new s.Fraction(n));return r.left.add(o.left),r.right.add(o.right),r},this.reorder=()=>{for(let t of this._equations)t.reorder();return this},this.solve=()=>{this._solutions={},this._resolutionSteps=[],this.reorder();let t=this.variables.sort();for(let e of t)this._solutions[e]=this._solveOneLetter(e,t);return this},this._checkIfLinerCombination=t=>!0,this.log=()=>{let t="";for(let e of this._equations)console.log(e.tex),t+=`${e.tex}\\n}`;return t},this._equations=[],this._letters="xy".split(""),void 0!==t&&t.length>0&&this.parse(...t),this}get isLinerarSystem(){return!0}get equations(){return this._equations}set equations(t){this._equations=t}get letters(){return this._letters.join("")}set letters(t){this._letters=t.split("")}get isSolvable(){return this.variables.length===this._equations.length}get variables(){let t=[];for(let e of this._equations)t=t.concat(e.variables);return[...new Set(t)].sort()}get tex(){let t,e,i=this.clone().reorder(),s=i.variables,n=[];for(let r of i.equations){t=[];for(let i of s)e=r.left.monomByLetter(i),0===t.length?t.push(e.isZero()?"":e.tex):t.push(e.isZero()?"":(1===e.coefficient.sign()?"+":"")+e.tex);t.push("="),t.push(r.right.tex),n.push(t.join("&"))}return`\\left\\{\\begin{array}{${"r".repeat(s.length)}cl}${n.join("\\\\ ")}\\end{array}\\right.`}get texSolution(){let t=[];void 0===this._solutions&&this.solve();for(let e in this._solutions){if(this._solutions[e].isReal)return void console.log(`Undetermined (letter ${e})`);if(this._solutions[e].isVarnothing)return void console.log(`Undefined (letter ${e})`);t.push(this._solutions[e].value.dfrac)}return`(${t.join(";")})`}_linearReduction(t,e,i){let s=t.left.monomByDegree(1,i).coefficient.clone(),n=e.left.monomByDegree(1,i).coefficient.clone().opposed();return this.mergeEquations(t,e,n,s)}_solveOneLetter(t,e){let i=this.clone().equations,n=[];for(let s of e)if(s!==t){for(let t=0;t<i.length-1;t++)n.push(this._linearReduction(i[t],i[t+1],s));this._resolutionSteps.push((new h).parse(...n)),i=this._resolutionSteps[this._resolutionSteps.length-1].clone().equations,n=[]}let r=this._resolutionSteps[this._resolutionSteps.length-1].equations[0];return r.solve(),{value:new s.Fraction(r.solutions[0]),isReal:r.isReal,isVarnothing:r.isVarnothing}}}e.LinearSystem=h},937:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Monom=void 0;const s=i(506),n=i(956);class r{constructor(t){return this.parse=t=>{this.literalStr=t,this._coefficient=new s.Fraction;for(const e of[...t.replace(/([a-z])|(\^[+-]?[0-9]+)/g,",").split(",")])""!==e.trim()&&this._coefficient.multiply(new s.Fraction(e.trim()));return this},this.clone=()=>{let t=new r;t.coefficient=this._coefficient.clone();for(let e in this._literal)t.setLetter(e,this._literal[e]);return t},this.zero=()=>(this._coefficient=(new s.Fraction).zero(),this._literal={},this),this.one=()=>(this._coefficient=(new s.Fraction).one(),this._literal={},this),this.clean=()=>{for(let t in this._literal)0===this._literal[t]&&delete this._literal[t];return this},this.random=(t="x",e=1,i=!1,s=!1)=>{this.coefficient.parse(n.Numeric.randomIntSym(10,s),i?n.Numeric.randomInt(1,10):1);for(let i of t.split(""))this.setLetter(i,t.length>1?n.Numeric.randomInt(e):e);return this},this.opposed=()=>(this._coefficient.opposed(),this),this.add=(...t)=>{for(let e of t)this.isSameAs(e)?this._coefficient.add(e.coefficient):console.log("Add: Is not similar: ",e.display);return this},this.subtract=(...t)=>{for(let e of t)this.isSameAs(e)?this._coefficient.add(e.coefficient.clone().opposed()):console.log("Subtract: Is not similar: ",e.display);return this},this.multiply=(...t)=>{for(let e of t){this._coefficient.multiply(e.coefficient);for(let t in e.literal)this._literal[t]=void 0===this._literal[t]?e.literal[t]:this._literal[t]+e.literal[t]}return this},this.multiplyByNumber=t=>(this._coefficient.multiply(t),this),this.divide=(...t)=>{for(let e of t){this._coefficient.divide(e.coefficient);for(let t in e.literal)this._literal[t]=void 0===this._literal[t]?-e.literal[t]:this._literal[t]-e.literal[t],0===this._literal[t]&&delete this._literal[t]}return this},this.pow=t=>{this._coefficient.pow(t);for(let e in this._literal)this._literal[e]*=t;return this},this.root=t=>this,this.sqrt=()=>{if(this.isSquare()){this._coefficient.sqrt();for(let t in this._literal)this._literal[t]/=2}return this.root(2)},this.compare=(t,e)=>{switch(void 0===e&&(e="="),e){case"=":return!!this.compare(t,"same")&&this._coefficient.isEqual(t.coefficient);case"same":let e=this.variables,i=t.variables,s=e.concat(i.filter((t=>e.indexOf(t)<0)));for(let e of s){if(void 0===this._literal[e]||void 0===t.literal[e])return!1;if(this._literal[e]!==t.literal[e])return!1}return!0;default:return!1}},this.isEqual=t=>this.compare(t,"="),this.isSameAs=t=>this.compare(t,"same"),this.isSquare=()=>!!this.coefficient.isSquare()&&this.isLitteralSquare(),this.isLitteralSquare=()=>{for(let t in this.literal)if(this.literal[t]%2!=0)return!1;return!0},this.hasLetter=t=>this._literal[void 0===t?"x":t]>0,this.setLetter=(t,e)=>{e<=0||!Number.isSafeInteger(e)?void 0!==this._literal[t]&&delete this._literal[t]:this._literal[t]=e},this.degree=t=>0===this.variables.length?0:void 0===t?Object.values(this._literal).reduce(((t,e)=>t+e)):void 0===this._literal[t]?0:this._literal[t],this.evaluate=t=>{let e=this.coefficient.clone();for(let i in this._literal){if(void 0===t[i])return(new s.Fraction).zero();e.multiply(t[i].clone().pow(this._literal[i]))}return e},this.derivative=t=>{if(void 0===t&&(t="x"),this.hasLetter(t)){let e=+this._literal[t],i=this.clone();return i._literal[t]-=1,i._coefficient.multiply(new s.Fraction(""+e)),i}return(new r).zero()},this.areSameAs=(...t)=>{for(let e=0;e<t.length;e++)if(!this.isSameAs(t[e]))return!1;return!0},this.areEquals=(...t)=>{if(!this.areSameAs(...t))return!1;for(let e of t)if(!this._coefficient.isEqual(e.coefficient))return!1;return!0},this.zero(),void 0!==t&&this.parse(t),this}get isMonom(){return!0}get coefficient(){return this._coefficient}set coefficient(t){this._coefficient=t}get literal(){return this._literal}get literalSqrt(){if(this.isLitteralSquare()){let t={};for(let e in this._literal)t[e]=this._literal[e]/2;return t}return this._literal}set literal(t){this._literal=t}set literalStr(t){for(const e of[...t.matchAll(/([a-z])\^([+-]?[0-9]+)/g)])e[1]in this._literal||(this._literal[e[1]]=0),this._literal[e[1]]+=+e[2];for(const e of[...t.matchAll(/([a-z](?!\^))/g)])e[1]in this._literal||(this._literal[e[1]]=0),this._literal[e[1]]+=1}get variables(){return this.clone().clean(),Object.keys(this._literal)}get display(){let t="";for(let e in this._literal)0!==this._literal[e]&&(t+=`${e}`,this._literal[e]>1&&(t+=`^${this._literal[e]}`));return""===t?0!=this._coefficient.value?`${this._coefficient.display}`:"":1===this._coefficient.value?t:-1===this._coefficient.value?`-${t}`:0===this._coefficient.value?"0":`${this._coefficient.display}${t}`}get dividers(){if(1!==this.coefficient.denominator)return[this.clone()];if(this.coefficient.numerator>1e4)return[this.clone()];const t=n.Numeric.dividers(Math.abs(this.coefficient.numerator));let e=[];for(let t in this.literal)e=this._getLitteralDividers(e,t);const i=[];if(e.length>0&&t.length>0)for(let n of t)for(let t of e){let e=new r;e.coefficient=new s.Fraction(n),e.literal=t,i.push(e)}else if(0===t.length)for(let t of e){let e=new r;e.coefficient=(new s.Fraction).one(),e.literal=t,i.push(e)}else for(let e of t){let t=new r;t.coefficient=new s.Fraction(e),i.push(t)}return 0===i.length?[(new r).one()]:i}_getLitteralDividers(t,e){let i=[];for(let s=0;s<=this.literal[e];s++)if(0===t.length){let t={};t[e]=s,i.push(t)}else for(let n of t){let t={};for(let e in n)t[e]=n[e];t[e]=s,i.push(t)}return i}get displayWithSign(){let t=this.display;return("-"!==t[0]?"+":"")+t}get tex(){let t="";for(let e in this._literal)0!==this._literal[e]&&(t+=`${e}`,this._literal[e]>1&&(t+=`^${this._literal[e]}`));return""===t?0!=this._coefficient.value?`${this._coefficient.dfrac}`:"0":1===this._coefficient.value?t:-1===this._coefficient.value?`-${t}`:0===this._coefficient.value?"0":`${this._coefficient.dfrac}${t}`}isZero(){return 0===this._coefficient.value}isOne(){return 1===this._coefficient.value&&0===this.variables.length}}e.Monom=r,r.lcm=(...t)=>{let e=new r,i=t.map((t=>t.coefficient.numerator)),o=t.map((t=>t.coefficient.denominator)),h=n.Numeric.gcd(...i),l=n.Numeric.lcm(...o);e.coefficient=new s.Fraction(h,l).reduce();for(let i of t){for(let t in e.literal)t in i.literal||(e.literal[t]=0);for(let t in i.literal)void 0===e.literal[t]&&i.literal[t]>0?e.literal[t]=i.literal[t]:e.literal[t]=Math.min(i.literal[t],e.literal[t])}return e},r.xmultiply=(...t)=>{let e=(new r).one();for(let i of t)e.multiply(i);return e}},38:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Polynom=void 0;const s=i(937),n=i(505),r=i(956),o=i(506);class h{constructor(t,...e){return this.genDisplay=(t,e,i)=>{let s="";for(const i of this._monoms)0!==i.coefficient.value&&(s+=`${1!==i.coefficient.sign()||""===s&&!0!==e?"":"+"}${"tex"===t?i.tex:i.display}`);return!0===i&&this.length>1&&(s="tex"===t?`\\left( ${s} \\right)`:`(${s})`),""===s&&(s="0"),s},this.parse=(t,...e)=>{if(void 0===e||0===e.length){if(t=""+t,this._rawString=t,""!==t&&!isNaN(Number(t))){this.empty();let e=new s.Monom;return e.coefficient=new o.Fraction(t),e.literalStr="",this.add(e),this}return this.shutingYardToReducedPolynom(t)}if(/^[a-z]/.test(t)){this.empty();let i=e.map((t=>new o.Fraction(t)));if(t.length>1){let e=t.split(""),n=0;for(let t of i){let i=new s.Monom;i.coefficient=t.clone(),i.literalStr=e[n]||"",this.add(i),n++}}else{let e=i.length-1;for(let n of i){let i=new s.Monom;i.coefficient=n.clone(),i.literalStr=`${t}^${e}`,this.add(i),e--}}return this}return this.zero()},this.shutingYardToReducedPolynom=t=>{const e=(new n.Shutingyard).parse(t),i=e.rpn,r=[];let o,l,a=null;for(const t of i)if(e.isOperation(t)){switch(l=r.pop()||(new h).zero(),"^"!==t[0]?o=r.length>0&&r.pop()||(new h).zero():a=Number(t.substr(1)),t){case"+":o.add(l);break;case"-":o.subtract(l);break;case"*":o.multiply(l);break;default:null!==a?"^"===t[0]&&(o=l.clone().pow(a)):console.log("Token not recognized in shuting yard to reduce polynom: ",t)}r.push(o)}else r.push((new h).add(new s.Monom(t)));return this._monoms=r[0].monoms,this},this.clone=()=>{const t=new h,e=[];for(const t of this._monoms)e.push(t.clone());return t.monoms=e,t},this.zero=()=>(this._monoms=[],this._monoms.push((new s.Monom).zero()),this._rawString="0",this),this.one=()=>(this._monoms=[],this._monoms.push((new s.Monom).one()),this._rawString="1",this),this.empty=()=>(this._monoms=[],this._rawString="",this),this._randomizeDefaults={degree:2,unit:!0,fractions:!1,factorable:!1,letters:"x",allowNullMonom:!1,numberOfMonoms:!1},this.randomize=t=>{let e=new h;void 0===t&&(t={});for(let e in this._randomizeDefaults)void 0===t[e]&&(t[e]=this._randomizeDefaults[e]);return e},this.rndSimple=(t=1,e=!1,i=!1,n="x",h=!0,l=-1)=>{let a;this.empty();for(let r=t;r>=0;r--)a=(new s.Monom).random(n,r,i,r!==t&&h),e&&r===t&&(a.coefficient=(new o.Fraction).one()),this.add(a);if(l>0&&l<this.length)for(this.reorder();this.length>l;)this._monoms.splice(r.Numeric.randomInt(1,this.length-1),1);return this},this.rndFactorable=(t=2,e=!1,i="x")=>{this._factors=[];for(let s=0;s<t;s++){let t=!0===e||s>=e,n=(new h).rndSimple(1,t,!1,i);this._factors.push(n)}this.empty().monoms=this._factors[0].monoms;for(let t=1;t<this._factors.length;t++)this.multiply(this._factors[t]);return this},this.opposed=()=>(this._monoms=this._monoms.map((t=>t.opposed())),this),this.add=(...t)=>{for(let e of t)e.isPolynom?this._monoms=this._monoms.concat(e.monoms):e.isMonom?this._monoms.push(e.clone()):Number.isSafeInteger(e)?this._monoms.push(new s.Monom(e.toString())):this._monoms.push(new s.Monom(e));return this.reduce()},this.subtract=(...t)=>{for(let e of t)e.isPolynom?this._monoms=this._monoms.concat(e.clone().opposed().monoms):e.isMonom?this._monoms.push(e.clone().opposed()):Number.isSafeInteger(e)?this._monoms.push(new s.Monom(e.toString()).opposed()):this._monoms.push(new s.Monom(e).opposed());return this.reduce()},this.multiply=t=>t.isPolynom?this.multiplyByPolynom(t):t.isFraction?this.multiplyByFraction(t):t.isMonom?this.multiplyByMonom(t):Number.isSafeInteger(t)?this.multiplyByInteger(t):this,this.multiplyByPolynom=t=>{const e=[];for(const i of this._monoms)for(const n of t.monoms)e.push(s.Monom.xmultiply(i,n));return this._monoms=e,this.reduce()},this.multiplyByFraction=t=>{for(const e of this._monoms)e.coefficient.multiply(t);return this.reduce()},this.multiplyByInteger=t=>this.multiplyByFraction(new o.Fraction(t)),this.multiplyByMonom=t=>{for(const e of this._monoms)e.multiply(t);return this.reduce()},this.euclidian=t=>{const e=t.variables[0],i=(new h).zero(),s=this.clone().reorder(e);if(0===t.variables.length)return{quotient:i,reminder:s};const n=t.monomByDegree(void 0,e),r=t.degree(e);let o,l=2*this.degree(e);for(;s.degree(e)>=r&&l>=0&&(l--,o=s.monomByDegree(void 0,e).clone().divide(n),!o.isZero());)i.add(o),s.subtract(t.clone().multiply(o));return{quotient:i,reminder:s}},this.divide=t=>{if(t.isFraction)this.divideByFraction(t);else if(Number.isSafeInteger(t))return this.divideByInteger(t)},this.divideByInteger=t=>{const e=new o.Fraction(t);for(const t of this._monoms)t.coefficient.divide(e);return this},this.divideByFraction=t=>{for(const e of this._monoms)e.coefficient.divide(t);return this},this.pow=t=>{if(!Number.isSafeInteger(t))return this.zero();if(t<0)return this.zero();if(0===t)return new h;const e=this.clone();for(let i=1;i<t;i++)this.multiply(e);return this.reduce()},this.compare=(t,e)=>{void 0===e&&(e="=");const i=this.clone().reduce().reorder(),s=t.clone().reduce().reorder();switch(e){case"=":if(i.length!==s.length||i.degree()!==s.degree())return!1;for(const t in i.monoms)if(!i.monoms[t].isEqual(s.monoms[t]))return!1;return!0;case"same":if(i.length!==s.length||i.degree()!==s.degree())return!1;for(const t in i.monoms)if(!i.monoms[t].isSameAs(s.monoms[t]))return!1;return!0;default:return!1}},this.isEqual=t=>this.compare(t,"="),this.isSameAs=t=>this.compare(t,"same"),this.isOpposedAt=t=>this.compare(t.clone().opposed(),"="),this.isFactorized=t=>{let e=new h(t);if(!this.isEqual(e))return!1;let i=t.replaceAll("*",""),s=""+i,n=[];for(let t of i.matchAll(/\(([a-z0-9+\-]+)\)(\^[0-9]*)?/g)){if(void 0!==t[2])for(let e=0;e<+t[2].substr(1);e++)n.push(t[1]);else n.push(t[1]);s=s.replaceAll(t[0],"")}""!==s&&n.push(s);let r=n.map((t=>new h(t)));this.factorize();let o=1;r.length;for(let t of this.factors)for(let e=0;e<r.length;e++){if(t.isEqual(r[e])){r.splice(e,1);break}if(t.isOpposedAt(r[e])){r.splice(e,1),o=-o;break}}return 0===r.length&&1===o},this.reduce=()=>{for(let t=0;t<this._monoms.length;t++)for(let e=t+1;e<this._monoms.length;e++)this._monoms[t].isSameAs(this.monoms[e])&&(this._monoms[t].add(this.monoms[e]),this._monoms.splice(e,1));this._monoms=this._monoms.filter((t=>0!==t.coefficient.value));for(const t of this._monoms)t.coefficient.reduce();return 0===this.length?(new h).zero():this},this.reorder=(t="x")=>(this._monoms.sort((function(e,i){return i.degree(t)-e.degree(t)})),this.reduce()),this.degree=t=>{let e=0;for(const i of this._monoms)e=Math.max(i.degree(t),e);return e},this.letters=()=>{let t=new Set;for(let e of this._monoms)t=new Set([...t,...e.variables]);return[...t]},this.replaceBy=(t,e)=>{let i;const s=(new h).zero();for(const n of this.monoms)void 0===n.literal[t]||0===n.literal[t]?s.add(n.clone()):(i=+n.literal[t],delete n.literal[t],s.add(e.clone().pow(i).multiply(n)));return this._monoms=s.reduce().reorder().monoms,this},this.evaluate=t=>{const e=(new o.Fraction).zero();return this._monoms.forEach((i=>{e.add(i.evaluate(t))})),e},this.derivative=t=>{let e=new h;for(let i of this._monoms)e.add(i.derivative(t));return e},this.factorize_OLD=t=>{this._factors=[];let e=this.clone(),i=0;e.monomByDegree().coefficient.numerator<0&&this._factors.push(new h("-1"));let s=e.commonMonom();if(!s.isOne()){let t=new h;t.monoms=[s],0===this._factors.length?this._factors.push(t):(this._factors=[],this._factors.push(t.opposed())),e=e.euclidian(t).quotient,i=t.degree()}if(e.degree()<=1)this._factors.push(e.clone());else{let s,n=new o.Fraction,r=e.degree();t=void 0===t?20:t;for(let o=1;o<=t;o++)for(let l=-t;l<=t;l++){if(n.parse(-l,o),e.evaluate({x:n}))for(s=new h(`${o}x+${l}`);0===e.evaluate({x:n}).value;)this._factors.push(s.clone()),i++,e=e.euclidian(s).quotient;if(i>r)return this}if(e.degree()>1)return this._factors.push(e.clone()),this}return this},this.factorize=t=>{let e,i=[],s=this.clone().reorder(),n=s.commonMonom();n.isOne()||(e=new h,e.monoms=[n],i=[e.clone()],s=s.euclidian(e).quotient);let r=2*s.degree();for(;r>=0;){if(r--,s.monoms.length<2){s.isOne()||i.push(s.clone());break}{let t=s.monoms[0].dividers,e=s.monoms[s.monoms.length-1].dividers;for(let n of t)for(let t of e){let e,r=new h;r.monoms=[n.clone(),t.clone()],e=s.euclidian(r),e.reminder.isZero()?(s=e.quotient.clone(),i.push(r)):(r.monoms=[n.clone(),t.clone().opposed()],e=s.euclidian(r),e.reminder.isZero()&&(s=e.quotient.clone(),i.push(r)))}}}return this.factors=i,i},this._factorize2ndDegree=t=>{let e,i,s,n,r,o,l,a,u;if(1===this.numberOfVars)return s=this.monomByDegree(2,t).coefficient,n=this.monomByDegree(1,t).coefficient,r=this.monomByDegree(0,t).coefficient,o=n.clone().pow(2).subtract(s.clone().multiply(r).multiply(4)),o.isZero()?(l=n.clone().opposed().divide(s.clone().multiply(2)),e=new h(t).subtract(l.display).multiply(l.denominator),i=new h(t).subtract(l.display).multiply(l.denominator),u=s.divide(l.denominator).divide(l.denominator),u.isOne()?[e,i]:[new h(u.display),e,i]):o.isPositive()&&o.isSquare()?(l=n.clone().opposed().add(o.clone().sqrt()).divide(s.clone().multiply(2)),a=n.clone().opposed().subtract(o.clone().sqrt()).divide(s.clone().multiply(2)),u=s.divide(l.denominator).divide(a.denominator),u.isOne()?[new h(t).subtract(l.display).multiply(l.denominator),new h(t).subtract(a.display).multiply(a.denominator)]:[new h(u.display),new h(t).subtract(l.display).multiply(l.denominator),new h(t).subtract(a.display).multiply(a.denominator)]):[this.clone()];if(s=this.monomByDegree(2,t),n=this.monomByDegree(1,t),r=this.monomByDegree(0,t),s.isLitteralSquare()&&r.isLitteralSquare()&&n.clone().pow(2).isSameAs(s.clone().multiply(r))){let t,e=new h("x",s.coefficient,n.coefficient,r.coefficient)._factorize2ndDegree("x"),i=[];if(e.length>=2){for(let n of e)0===n.degree()?i.push(n.clone()):(t=n.clone(),t.monoms[0].literal=s.literalSqrt,t.monoms[1].literal=r.literalSqrt,i.push(t.clone()));return i}}return[this.clone()]},this._factorizeByGroups=()=>[],this.getZeroes=()=>{switch(this.degree()){case 0:return 0===this._monoms[0].coefficient.value?[!0]:[!1];case 1:if(1===this._monoms.length)return[(new o.Fraction).zero()];{const t=this.clone().reduce().reorder();return[t.monoms[1].coefficient.opposed().divide(t.monoms[0].coefficient)]}default:0===this._factors.length&&this.factorize();let t=[],e=[];for(let i of this._factors)if(i.degree()>2);else if(2===i.degree()){let e=i.monomByDegree(2).coefficient,s=i.monomByDegree(1).coefficient,n=i.monomByDegree(0).coefficient,r=s.clone().pow(2).subtract(e.clone().multiply(n).multiply(4));if(r.value>0){let i=(-s.value+Math.sqrt(r.value))/(2*e.value),n=(-s.value-Math.sqrt(r.value))/(2*e.value);t.push(new o.Fraction(i.toFixed(3)).reduce()),t.push(new o.Fraction(n.toFixed(3)).reduce())}else 0===r.value||console.log("No zero for ",i.tex)}else for(let s of i.getZeroes())!1!==s&&!0!==s&&-1===e.indexOf(s.frac)&&(t.push(s),e.push(s.frac));return t}return[]},this.monomByDegree=(t,e)=>{if(void 0===t)return this.monomByDegree(this.degree(e),e);const i=this.clone().reduce();for(const s of i._monoms)if(s.degree(e)===t)return s.clone();return(new s.Monom).zero()},this.monomsByDegree=(t,e)=>{if(void 0===t)return this.monomsByDegree(this.degree(e));let i=[];const s=this.clone().reduce();for(const n of s._monoms)n.degree(e)===t&&i.push(n.clone());return i},this.monomByLetter=t=>{const e=this.clone().reduce();for(const i of e._monoms)if(i.hasLetter(t))return i.clone();return(new s.Monom).zero()},this.getDenominators=()=>{const t=[];for(const e of this._monoms)t.push(e.coefficient.denominator);return t},this.getNumerators=()=>{const t=[];for(const e of this._monoms)t.push(e.coefficient.numerator);return t},this.lcmDenominator=()=>r.Numeric.lcm(...this.getDenominators()),this.gcdDenominator=()=>r.Numeric.gcd(...this.getDenominators()),this.lcmNumerator=()=>r.Numeric.lcm(...this.getNumerators()),this.gcdNumerator=()=>r.Numeric.gcd(...this.getNumerators()),this.commonMonom=()=>{let t,e,i=(new s.Monom).one(),n=this.degree();t=this.gcdNumerator(),e=this.gcdDenominator(),i.coefficient=new o.Fraction(t,e);for(let t of this.variables){i.setLetter(t,n);for(let e of this._monoms)if(i.setLetter(t,Math.min(e.degree(t),i.degree(t))),0===i.degree(t))break}return i},this.makeItComplicate=(t=1)=>{if(this._texString="",this.degree()<1)return this;const e=r.Numeric.randomInt(0,this.degree()-1),i=(new h).rndSimple(e,!1,t>1,"x",!1,t>1?-1:1),s=(new h).rndSimple(1,!1,t>1),n=this.clone().subtract(i.clone().multiply(s));return n.factorizePartial(!0),this._texString=`${i.genDisplay("tex",!1,!0)} \\cdot ${s.genDisplay("tex",!1,!0)} ${n.texString} `,this},this.factorizePartial=t=>{if(this._texString="",this.length<=1)return this;let e,i,n,o,l,a;for(let u=0;u<this.length;u++){e=this._monoms[u].clone();for(let c=u+1;c<this.length;c++)if(i=this._monoms[c].clone(),l=r.Numeric.gcd(e.coefficient.numerator,i.coefficient.numerator),1!==l)return n=s.Monom.lcm(e,i),a=1===e.coefficient.sign()?"+":"-",this._texString=`${!0===t?a:"+"===a?"":a}${n.tex}`,o=(new h).add(e.divide(n)).add(i.divide(n)),this._texString+=o.genDisplay("tex",!1,!0),this._texString+=this.clone().subtract(o.clone().multiply(n)).genDisplay("tex",!0,!1),this}return this._texString=this.genDisplay("tex",t),this},this.minify=()=>(this.multiply(this.lcmDenominator()).divide(this.gcdNumerator()).reduce(),this.reduce()),this.canDivide=(t,e="x")=>{const i=t.degree(),s={};if(0===i)return!t.isZero;if(1===i){const i=t.getZeroes();return!0!==i[0]&&!1!==i[0]&&(s[e]=i[0],0===this.evaluate(s).value)}return i>1&&(console.log("Currently, only first degree polynom are supported"),!1)},this._monoms=[],this._factors=[],void 0!==t&&this.parse(t,...e),this}get isPolynom(){return!0}get monoms(){return this._monoms}set monoms(t){this._monoms=t}get factors(){return this._factors}set factors(t){this._factors=t}get texFactors(){this.factorize();let t="";for(let e of this.factors)e.monoms.length>1?t+=`(${e.tex})`:t=e.tex+t;return t}get texString(){return this._texString}get length(){return this._monoms.length}get display(){return this.genDisplay()}get raw(){return this._rawString}get tex(){return this.genDisplay("tex")}get isMultiVariable(){for(const t of this._monoms)if(t.variables.length>1)return!0;return!1}get variables(){let t=[];for(const e of this._monoms)t=t.concat(e.variables);return t=[...new Set(t)],t}get numberOfVars(){return this.variables.length}get randomizeDefaults(){return this._randomizeDefaults}set randomizeDefaults(t){this._randomizeDefaults=t}isZero(){return 1===this._monoms.length&&this._monoms[0].coefficient.isZero()||0===this._monoms.length}isOne(){return 1===this._monoms.length&&this._monoms[0].coefficient.isOne()}}e.Polynom=h},107:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Rational=void 0;const s=i(38);e.Rational=class{constructor(t,e){this.clone=()=>(this._numerator=this._numerator.clone(),this._denominator=this._denominator.clone(),this),this.domain=()=>{let t=this._denominator.getZeroes();return 0===t.length||!1===t[0]?"\\mathbb{R}":!0===t[0]?"\\varnothing":"\\mathbb{R}\\setminus\\left{"+t.map((t=>"boolean"==typeof t?"":t.frac)).join(";")+"\\right}"},this.amplify=t=>(this._numerator.multiply(t),this._denominator.multiply(t),this),this.simplify=t=>{let e=this._numerator.euclidian(t);if(!e.reminder.isZero())return this;let i=this._denominator.euclidian(t);return i.reminder.isZero()?(this._numerator=e.quotient,this._denominator=i.quotient,this):this},this.reduce=()=>{console.log(this._numerator.tex),this._numerator.factorize(),console.log(this._numerator.factors.map((t=>t.tex)));for(let t of this._numerator.factors)this.simplify(t);return this},this.opposed=()=>(this._numerator.opposed(),this),this.add=t=>{let e=this._denominator.clone();return this.amplify(t._denominator),this._numerator.add(t._numerator.clone().multiply(e)),this},this.subtract=t=>this.add(t.clone().opposed()),this._numerator=t?t.clone():new s.Polynom,this._denominator=e?e.clone():new s.Polynom}get tex(){return`\\dfrac{ ${this._numerator.tex} }{ ${this._denominator.tex} }`}get texFactors(){return this._numerator.factorize(),this._denominator.factorize(),`\\dfrac{ ${this._numerator.texFactors} }{ ${this._denominator.texFactors} }`}get numerator(){return this._numerator}get denominator(){return this._denominator}}},506:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Fraction=void 0;const s=i(956);class n{constructor(t,e){return this.parse=(t,e)=>{let i;if(null===t)return this._numerator=0,this._denominator=1,this;switch(typeof t){case"string":if(i=t.split("/"),i.length>2)throw"Two many divide signs";if(i.map((t=>""===t||isNaN(Number(t)))).includes(!0))throw"Not a number";if(1===i.length)return this.parse(+i[0]);2===i.length?"0"===i[1]?(this._numerator=NaN,this._denominator=1):(this._numerator=+i[0],this._denominator=+i[1]):(this._numerator=NaN,this._denominator=1);break;case"number":if(Number.isSafeInteger(t))this._numerator=+t,void 0!==e&&Number.isSafeInteger(e)?this._denominator=+e:this._denominator=1;else{let i=t.toString().split(".")[1].length;void 0===e?(this._numerator=t*Math.pow(10,i),this._denominator=Math.pow(10,i)):Number.isSafeInteger(e)&&(this._numerator=t*Math.pow(10,i)-Math.floor(t*Math.pow(10,i-e)),this.denominator=Math.pow(10,i)-Math.pow(10,i-e))}break;case"object":t.isFraction&&(this._numerator=+t.numerator,this._denominator=+t.denominator)}return this},this.clone=()=>{let t=new n;return t.numerator=+this._numerator,t.denominator=+this._denominator,t},this.zero=()=>(this._numerator=0,this._denominator=1,this),this.one=()=>(this._numerator=1,this._denominator=1,this),this.infinite=()=>(this._numerator=1/0,this._denominator=1,this),this.invalid=()=>(this._numerator=NaN,this._denominator=1,this),this.opposed=()=>(this._numerator=-this._numerator,this),this.add=t=>{let e=this._numerator,i=this._denominator;return this._numerator=e*t.denominator+t.numerator*i,this._denominator=i*t.denominator,this.reduce()},this.subtract=t=>this.add(t.clone().opposed()),this.multiply=t=>{let e=new n(t);return this._numerator=this._numerator*e.numerator,this._denominator=this._denominator*e.denominator,this.reduce()},this.divide=t=>{let e=new n(t);if(0===e.numerator)return(new n).infinite();let i=+this._numerator,s=+this._denominator;return this._numerator=i*e.denominator,this._denominator=s*e.numerator,this.reduce()},this.invert=()=>{let t=+this._numerator,e=+this._denominator;return this._numerator=e,this._denominator=t,this},this.pow=t=>Number.isSafeInteger(t)?(this.reduce(),t<0&&this.invert(),this._numerator=this._numerator**Math.abs(t),this._denominator=this._denominator**Math.abs(t),this):this.invalid(),this.root=t=>(0===t||(t<0&&this.invert(),Math.pow(this._numerator,Math.abs(1/t)),Math.pow(this._denominator,Math.abs(1/t)),this._numerator=Math.pow(this._numerator,Math.abs(1/t)),this._denominator=Math.pow(this._denominator,Math.abs(1/t))),this),this.sqrt=()=>this.root(2),this.abs=()=>(this._numerator=Math.abs(this._numerator),this._denominator=Math.abs(this._denominator),this),this.reduce=()=>{let t=s.Numeric.gcd(this._numerator,this._denominator);return this._numerator=this._numerator/t,this._denominator=this._denominator/t,this._denominator<0&&(this._denominator=-this._denominator,this._numerator=-this._numerator),this},this.amplify=t=>(Number.isSafeInteger(t)&&(this._numerator*=t,this._denominator*=t),this),this.compare=(t,e)=>{switch(void 0===e&&(e="="),e){case">":return this.value>t.value;case">=":return this.value>=t.value;case"<":return this.value<t.value;case"<=":return this.value<=t.value;case"=":return this.value===t.value;case"<>":return this.value!==t.value;default:return!1}},this.lesser=t=>this.compare(t,"<"),this.leq=t=>this.compare(t,"<="),this.greater=t=>this.compare(t,">"),this.geq=t=>this.compare(t,">="),this.isEqual=t=>this.compare(t,"="),this.isDifferent=t=>this.compare(t,"<>"),this.isOpposed=t=>this.isEqual(t.clone().opposed()),this.isInverted=t=>this.isEqual((new n).one().divide(t.clone())),this.isZero=()=>0===this._numerator,this.isOne=()=>1===this._numerator&&1===this._denominator,this.isPositive=()=>1===this.sign(),this.isNegative=()=>-1===this.sign(),this.isNaN=()=>isNaN(this._numerator),this.isInfinity=()=>this._numerator===1/0,this.isFinite=()=>!this.isInfinity(),this.isSquare=()=>Math.sqrt(this._numerator)%1==0&&Math.sqrt(this._denominator)%1==0,this.isReduced=()=>1===Math.abs(s.Numeric.gcd(this._numerator,this._denominator)),this.sign=()=>this._numerator*this._denominator>=0?1:-1,this.areEquals=(...t)=>{for(let e=0;e<t.length;e++)if(!this.isEqual(t[e]))return!1;return!0},this._numerator=1,this._denominator=1,void 0!==t&&this.parse(t,e),this}get isFraction(){return!0}get numerator(){return this._numerator}set numerator(t){this._numerator=t}get denominator(){return this._denominator}set denominator(t){this._denominator=t}get value(){return this._numerator/this._denominator}get tex(){return 1===this._denominator?`${this._numerator}`:this._numerator<0?`-\\frac{ ${-this._numerator} }{ ${this._denominator} }`:`\\frac{ ${this._numerator} }{ ${this._denominator} }`}get display(){return 1===this._denominator?`${this._numerator}`:`${this._numerator}/${this._denominator}`}get frac(){return this.tex}get dfrac(){return this.tex.replace("\\frac","\\dfrac")}}e.Fraction=n},330:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Nthroot=void 0,e.Nthroot=class{constructor(){this.parse=(t,e,i)=>(this._coefficient=void 0===i?1:i,this._nth=void 0===e?2:e,this._radical=void 0===t?1:t,this._nth%2==0&&this._radical<0&&(this._isValid=!1),this),this.reduce=()=>{let t=Math.floor(Math.pow(this._radical,1/this._nth));for(;t>1;)this._radical%Math.pow(t,this._nth)!=0?t--:(this._coefficient*=t,this._radical=this._radical/Math.pow(t,this._nth),t=Math.floor(Math.pow(this._radical,1/this._nth)));return this},this.multiply=t=>(this._radical*=t.radical,this.reduce()),this.hasRadical=()=>!(1===this._radical||0===this._radical||!1===this._isValid),this._radical=1,this._coefficient=1,this._nth=2,this._isValid=!0}get radical(){return this._radical}set radical(t){this._radical=t}get nth(){return this._nth}set nth(t){Number.isSafeInteger(t)&&t>=2?this._nth=t:(console.log("Error setting the nth root"),this._nth=2)}get coefficient(){return this._coefficient}set coefficient(t){this._coefficient=t}get tex(){let t;return t=1===this._coefficient?"":-1===this._coefficient?"-":this._coefficient.toString(),1===this._radical?`${this._coefficient}`:2===this._nth?`${t}\\sqrt{${this._radical}}`:`${t}\\sqrt[${this._nth}]{${this._radical}}`}get value(){return this._coefficient*Math.pow(this._radical,1/this._nth)}}},9:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Line=void 0;const s=i(506),n=i(586),r=i(557),o=i(38),h=i(956),l=i(760);class a{constructor(...t){return this.parse=(...t)=>{if(this._exists=!1,3===t.length)return this.parseByCoefficient(t[0],t[1],t[2]);if(2===t.length){if(t[0].isPoint&&t[1].isVector)return this.parseByPointAndVector(t[0],t[1]);if(t[0].isPoint&&t[1].isPoint)return this.parseByPointAndVector(t[0],new n.Vector(t[0],t[1]))}else if(1===t.length){if(t[0].isLine)return t[0].clone();let e=new l.Equation(t[0]);if(e.isEquation){e.reorder(!0);let t=new Set(e.letters());if(!t.has("x")&&!t.has("y"))return;for(let e of["x","y"])t.has(e)&&t.delete(e);return t.size>0?(console.log("Extra variable in the equation."),this):this.parseByCoefficient(e.left.monomByLetter("x").coefficient,e.left.monomByLetter("y").coefficient,e.left.monomByDegree(0).coefficient)}}return console.log("Someting wrong happend while creating the line"),this},this.parseByCoefficient=(t,e,i)=>(this._a=new s.Fraction(t),this._b=new s.Fraction(e),this._c=new s.Fraction(i),this._d=new n.Vector(this._b.clone(),this._a.clone().opposed()),this._OA=new r.Point((new s.Fraction).zero(),this._c.clone()),this._n=this._d.clone().normal(),this._exists=!0,this),this.parseByPointAndVector=(t,e)=>(this.parseByCoefficient(e.y,e.x.clone().opposed(),t.x.clone().multiply(e.y).subtract(t.y.clone().multiply(e.x)).opposed()),this._OA=t.clone(),this._d=e.clone(),this._n=this._d.clone().normal(),this._exists=!0,this),this.clone=()=>(this._a=this._a.clone(),this._b=this._b.clone(),this._c=this._c.clone(),this._d=this._d.clone(),this._OA=this._OA.clone(),this._n=this._n.clone(),this),this.isParellelTo=t=>this.slope.isEqual(t.slope)&&this.height.isDifferent(t.height),this.isSameAs=t=>this.slope.isEqual(t.slope)&&this.height.isEqual(t.height),this.simplifyDirection=()=>{let t=h.Numeric.lcm(this._d.x.denominator,this._d.y.denominator),e=h.Numeric.gcd(this._d.x.numerator,this._d.y.numerator);return this._d.x.multiply(t).divide(e),this._d.y.multiply(t).divide(e),this},this.intersection=t=>{let e=new r.Point,i=!1,s=!1;return this._b.isZero()||t.b.isZero(),this.isParellelTo(t)?(e.x=null,e.y=null,i=!0):this.isSameAs(t)?(e.x=null,e.y=null,s=!0):(e.x=this._b.clone().multiply(t.c).subtract(this._c.clone().multiply(t.b)).divide(this._a.clone().multiply(t.b).subtract(this._b.clone().multiply(t.a))),e.y=this._a.clone().multiply(t.c).subtract(this._c.clone().multiply(t.a)).divide(this._b.clone().multiply(t.a).subtract(this._a.clone().multiply(t.b)))),{point:e,hasIntersection:!(i||s),isParallel:i,isSame:s}},this._exists=!1,void 0!==t&&this.parse(...t),this}get isLine(){return!0}get exists(){return this._exists}get equation(){return new l.Equation((new o.Polynom).parse("xy",this._a,this._b,this._c),new o.Polynom("0")).simplify()}get tex(){let t=this.equation;return this._a.isNegative()&&t.multiply(-1),{canonical:t.tex,mxh:this.slope.isInfinity()?"x="+this.OA.x.tex:"y="+(new o.Polynom).parse("x",this.slope,this.height).tex,parametric:`${r.Point.pmatrix("x","y")} = ${r.Point.pmatrix(this._OA.x,this._OA.y)} + k\\cdot ${r.Point.pmatrix(this._d.x,this._d.y)}`}}get a(){return this._a}set a(t){this._a=t}get b(){return this._b}set b(t){this._b=t}get c(){return this._c}set c(t){this._c=t}get OA(){return this._OA}set OA(t){this._OA=t}get d(){return this._d}get n(){return this._n}get normal(){return new n.Vector(this._a,this._b)}set d(t){this._d=t}get slope(){return this._a.clone().opposed().divide(this._b)}get height(){return this._c.clone().opposed().divide(this._b)}distanceTo(t){let e=t.x.clone().multiply(this._a).add(t.y.clone().multiply(this._b)).add(this._c).abs(),i=this.normal.normSquare;if(i.isZero())return{value:NaN,tex:"Not a line",fraction:(new s.Fraction).infinite()};let n=e.value/Math.sqrt(i.value),r=e.clone().divide(i.clone().sqrt());return i.isSquare()?{value:n,tex:r.tex,fraction:r}:{value:n,tex:`\\frac{${e.tex}}{\\sqrt{${i.tex}}}`,fraction:r}}hitSegment(t,e){let i=this.intersection(new a(t,e));return!!i.hasIntersection&&i.point.x.value>=Math.min(t.x.value,e.x.value)&&i.point.x.value<=Math.max(t.x.value,e.x.value)&&i.point.y.value>=Math.min(t.y.value,e.y.value)&&i.point.y.value<=Math.max(t.y.value,e.y.value)}canonicalAsFloatCoefficient(t){void 0===t&&(t=2),this._a.value,this._b.value,this._c.value;let e="";return this._a.isZero()||(e=this._a.isOne()?"x":this._a.clone().opposed().isOne()?"-x":this._a.value.toFixed(t)+"x"),this._b.isZero()||(this._b.isPositive()&&(e+="+"),e+=this._b.value.toFixed(t)+"y"),this._c.isZero()||(this._c.isPositive()&&(e+="+"),e+=this._c.value.toFixed(t)),e+"=0"}}e.Line=a},557:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Point=void 0;const s=i(506);class n{constructor(...t){this.parse=(...t)=>{if(this.zero(),0===t.length)return this;if(1===t.length){if(t[0].isPoint)return t.clone();if(void 0===t[0].x||void 0===t[0].y)return this.zero();this._x=new s.Fraction(t[0].x).reduce(),this._y=new s.Fraction(t[0].y).reduce()}return 2===t.length&&(this._x=new s.Fraction(t[0]).reduce(),this._y=new s.Fraction(t[1]).reduce()),this},this.clone=()=>{let t=new n;return null!==this._x&&(t.x=this._x.clone()),null!==this._y&&(t.y=this._y.clone()),t},this.zero=()=>(this._x=new s.Fraction(null),this._y=new s.Fraction(null),this),this.origin=()=>(this.zero(),this),this.middleOf=(t,e)=>(this._x=t.x.clone().add(e.x).divide(2),this._y=t.y.clone().add(e.y).divide(2),this),this.texValues=t=>{let e=[];return e.push(this._x.value.toFixed(void 0===t?2:t)),e.push(this._y.value.toFixed(void 0===t?2:t)),`\\left(${e.join(";")}\\right)`},this._x=(new s.Fraction).zero(),this._y=(new s.Fraction).zero(),void 0!==t&&this.parse(...t)}get isPoint(){return!0}get x(){return this._x}set x(t){this._x=t}get y(){return this._y}set y(t){this._y=t}get tex(){let t=[];return t.push(this._x.tex),t.push(this._y.tex),`\\left(${t.join(";")}\\right)`}}e.Point=n,n.pmatrix=(t,e,i)=>void 0===i?`\\begin{pmatrix} ${t.tex?t.tex:t} \\\\ ${e.tex?e.tex:e} \\end{pmatrix}`:`\\begin{pmatrix} ${t.tex?t.tex:t} \\\\ ${e.tex?e.tex:e} \\\\ ${i.tex?i.tex:i} \\end{pmatrix}`},164:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Triangle=void 0;const s=i(557),n=i(506),r=i(586),o=i(9),h=i(760);e.Triangle=class{constructor(...t){return this.parse=(...t)=>{if(6===t.length){let e=t.map((t=>new n.Fraction(t)));return this.parse(new s.Point(e[0],e[1]),new s.Point(e[2],e[3]),new s.Point(e[4],e[5]))}if(3===t.length){if(3===t.filter((t=>"string"==typeof t)).length)return this.parse(...t.map((t=>new o.Line(t))));if(3===t.filter((t=>!0===t.isLine)).length){this._lines={AB:t[0],BC:t[1],AC:t[2]};let e=t[0].intersection(t[1]);if(!e.hasIntersection)return this;if(this._B=e.point.clone(),e=t[1].intersection(t[2]),!e.hasIntersection)return this;if(this._C=e.point.clone(),e=t[2].intersection(t[0]),!e.hasIntersection)return this;this._A=e.point.clone()}else{if(t.filter((t=>!0===t.isPoint)).length<3)return this.parse(new s.Point(t[0]),new s.Point(t[1]),new s.Point(t[2]));this._A=t[0].clone(),this._B=t[1].clone(),this._C=t[2].clone(),this._lines={AB:new o.Line(this._A,this._B),BC:new o.Line(this._B,this._C),AC:new o.Line(this._A,this._C)}}}else if(1===t.length&&!0===t[0].isTriangle)return t[0].clone();return this._updateTriangle(),this},this.clone=()=>(this._A=this._A.clone(),this._B=this._B.clone(),this._C=this._C.clone(),this._lines={AB:this._lines.AB.clone(),BC:this._lines.BC.clone(),AC:this._lines.AC.clone()},this._updateTriangle(),this),this._updateTriangle=()=>{this._middles={AB:(new s.Point).middleOf(this._A,this._B),AC:(new s.Point).middleOf(this._A,this._C),BC:(new s.Point).middleOf(this._B,this._C)},this._remarquables=this._calculateRemarquableLines()},this.getPointByName=t=>{switch(t.toUpperCase()){case"A":return this._A;case"B":return this._B;case"C":return this._C}return this._A},this.getSegment=(t,e)=>new r.Vector(this.getPointByName(t),this.getPointByName(e)),this._calculateRemarquableLines=()=>{let t={medians:{A:new o.Line(this._A,this._middles.BC),B:new o.Line(this._B,this._middles.AC),C:new o.Line(this._C,this._middles.AB),intersection:null},mediators:{AB:new o.Line(this._middles.AB,new r.Vector(this._A,this._B).normal()),AC:new o.Line(this._middles.AC,new r.Vector(this._A,this._C).normal()),BC:new o.Line(this._middles.BC,new r.Vector(this._B,this._C).normal()),intersection:null},heights:{A:new o.Line(this._A,new r.Vector(this._B,this._C).normal()),B:new o.Line(this._B,new r.Vector(this._A,this._C).normal()),C:new o.Line(this._C,new r.Vector(this._A,this._B).normal()),intersection:null},bisectors:{A:this._calculateBisectors("A"),B:this._calculateBisectors("B"),C:this._calculateBisectors("C"),intersection:null}};return t.medians.intersection=t.medians.A.intersection(t.medians.B).point,t.mediators.intersection=t.mediators.AB.intersection(t.mediators.BC).point,t.heights.intersection=t.heights.A.intersection(t.heights.B).point,t.bisectors.intersection=t.bisectors.A.intersection(t.bisectors.B).point,t},this._calculateBisectors=t=>{let e,i,s=this.lines;"A"===t?(e=s.AB,i=s.AC):"B"===t?(e=s.AB,i=s.BC):"C"===t&&(e=s.BC,i=s.AC);let n=new o.Line(new h.Equation(e.equation.left.clone().multiply(i.n.simplify().norm),i.equation.left.clone().multiply(e.n.simplify().norm)).reorder(!0).simplify()),r=new o.Line(new h.Equation(e.equation.left.clone().multiply(i.n.simplify().norm),i.equation.left.clone().multiply(e.n.simplify().norm).opposed()).reorder(!0).simplify());return"A"===t?n.hitSegment(this.B,this.C)?n:r:"B"===t?n.hitSegment(this.A,this.C)?n:r:"C"===t?n.hitSegment(this.B,this.A)?n:r:n},t.length>0&&this.parse(...t),this}get isTriangle(){return!0}get A(){return this._A}get B(){return this._B}get C(){return this._C}get AB(){return this.getSegment("A","B")}get BA(){return this.getSegment("B","A")}get BC(){return this.getSegment("B","C")}get CB(){return this.getSegment("C","B")}get AC(){return this.getSegment("A","C")}get CA(){return this.getSegment("C","A")}get isRectangle(){return!!this.AB.isNormalTo(this.BC)||!!this.AB.isNormalTo(this.AC)||!!this.BC.isNormalTo(this.AC)}get isEquilateral(){return this.AB.normSquare.isEqual(this.BC.normSquare)&&this.AB.normSquare.isEqual(this.AC.normSquare)}get isIsocele(){return this.AB.normSquare.isEqual(this.BC.normSquare)||this.AB.normSquare.isEqual(this.AC.normSquare)||this.BC.normSquare.isEqual(this.AC.normSquare)}get lines(){return this._lines}get remarquables(){return this._remarquables}}},586:(t,e,i)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Vector=void 0;const s=i(506),n=i(956);class r{constructor(...t){this.parse=(...t)=>{if(this.zero(),0===t.length)return this;if(1===t.length)return t[0].isVector?t[0].clone():this._parseString(t[0]);if(t.length>=2){if(t[0].isPoint&&t[1].isPoint)return this._x=t[1].x.clone().subtract(t[0].x),this._y=t[1].y.clone().subtract(t[0].y),this;!t[0].isFraction&&isNaN(t[0])||(this._x=new s.Fraction(t[0])),!t[1].isFraction&&isNaN(t[1])||(this._y=new s.Fraction(t[1]))}return this},this.clone=()=>{let t=new r;return null!==this._x&&(t.x=this._x.clone()),null!==this._y&&(t.y=this._y.clone()),t},this.reset=()=>(this._x=null,this._y=null,this),this.zero=()=>(this.reset(),this._x=new s.Fraction(null),this._y=new s.Fraction(null),this),this.one=()=>(this._x=new s.Fraction,this._y=new s.Fraction,this),this._parseString=t=>{let e=t.split(/[,;\s]/g);return this.x=new s.Fraction(e[0]||null),this.y=new s.Fraction(e[1]||null),this},this.opposed=()=>(this._x.opposed(),this._y.opposed(),this),this.add=t=>(this._x.add(t.x),this._y.add(t.y),this),this.subtract=t=>this.add(t.clone().opposed()),this.scalarProductWithVector=t=>this._x.clone().multiply(t.x).add(this._y.clone().multiply(t.y)),this.normal=()=>{let t=this.x.clone().opposed(),e=this.y.clone();return this._x=e,this._y=t,this},this.isNormalTo=t=>this.scalarProductWithVector(t).isZero(),this.multiplyByScalar=t=>{let e=new s.Fraction(t);return this._x.multiply(e),this._y.multiply(e),this},this.divideByScalar=t=>this.multiplyByScalar(new s.Fraction(t).invert()),this.simplify=()=>this.multiplyByScalar(n.Numeric.lcm(this._x.denominator,this._y.denominator)).divideByScalar(n.Numeric.gcd(this._x.numerator,this._y.numerator)),this.angleWith=(t,e,i)=>{let s=this.scalarProductWithVector(t).value,n=i?1:180/Math.PI;return e&&(s=Math.abs(s)),n*Math.acos(s/(this.norm*t.norm))},this._x=(new s.Fraction).zero(),this._y=(new s.Fraction).zero(),void 0!==t&&this.parse(...t)}get isVector(){return!0}get x(){return this._x}set x(t){this._x=t}get y(){return this._y}set y(t){this._y=t}get normSquare(){return this._x.clone().pow(2).add(this._y.clone().pow(2))}get norm(){return Math.sqrt(this.normSquare.value)}get tex(){return`\\begin{pmatrix}${this._x.tex} \\\\ ${this._y.tex} \\end{pmatrix}`}}e.Vector=r,r.scalarProduct=(t,e)=>t.x.value*e.x.value+t.y.value*e.y.value},956:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Numeric=void 0;class i{static round(t,e=2){return Number(Math.round(Number(t+"e"+e))+"e-"+e)}static prime(t){let e=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919,7927,7933,7937,7949,7951,7963,7993,8009,8011,8017,8039,8053,8059,8069,8081,8087,8089,8093,8101,8111,8117,8123,8147,8161,8167,8171,8179,8191,8209,8219,8221,8231,8233,8237,8243,8263,8269,8273,8287,8291,8293,8297,8311,8317,8329,8353,8363,8369,8377,8387,8389,8419,8423,8429,8431,8443,8447,8461,8467,8501,8513,8521,8527,8537,8539,8543,8563,8573,8581,8597,8599,8609,8623,8627,8629,8641,8647,8663,8669,8677,8681,8689,8693,8699,8707,8713,8719,8731,8737,8741,8747,8753,8761,8779,8783,8803,8807,8819,8821,8831,8837,8839,8849,8861,8863,8867,8887,8893,8923,8929,8933,8941,8951,8963,8969,8971,8999,9001,9007,9011,9013,9029,9041,9043,9049,9059,9067,9091,9103,9109,9127,9133,9137,9151,9157,9161,9173,9181,9187,9199,9203,9209,9221,9227,9239,9241,9257,9277,9281,9283,9293,9311,9319,9323,9337,9341,9343,9349,9371,9377,9391,9397,9403,9413,9419,9421,9431,9433,9437,9439,9461,9463,9467,9473,9479,9491,9497,9511,9521,9533,9539,9547,9551,9587,9601,9613,9619,9623,9629,9631,9643,9649,9661,9677,9679,9689,9697,9719,9721,9733,9739,9743,9749,9767,9769,9781,9787,9791,9803,9811,9817,9829,9833,9839,9851,9857,9859,9871,9883,9887,9901,9907,9923,9929,9931,9941,9949,9967,9973];return void 0===t?e:e.slice(0,Math.max(e.length,t))}static dividers(t){let e;const i=Math.sqrt(Math.abs(t));e=[];for(let s=1;s<=i;s++)t%s==0&&(e.push(s),e.push(t/s));return e.sort((function(t,e){return t-e})),[...new Set(e)]}static gcd(...t){let e=function(t,i){return 0===i?t:e(i,t%i)},i=1,s=2;if(0===t.length)return 1;if(1===t.length)return 0===t[0]?1:t[0];if(i=e(t[0],t[1]),1===i)return 1;for(s=2;s<t.length&&(i=e(i,t[s]),1!==i);s++);return Math.abs(i)}static lcm(...t){return t.reduce((function(t,e){return Math.abs(t*e/i.gcd(t,e))}))}static randomBool(t=.5){return Math.random()<t}static randomInt(t,e){return void 0===e?i.randomInt(0,t):Math.floor(Math.random()*(e-t+1)+t)}static randomIntSym(t,e){return!1===e?i.randomBool()?this.randomInt(1,t):-this.randomInt(1,t):i.randomInt(-t,t)}}e.Numeric=i},505:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Shutingyard=void 0,e.Shutingyard=class{constructor(){this._rpn=[]}isOperation(t){return!!t[0].match(/[+\-*/^]/g)||!!t.match(/^sin|cos|tan/g)}NextToken(t,e){let i,s,n;return i=t.substr(e).match(/^[0-9/a-z^]+/g)||[],i.length>0?(s=i[0],n="monom"):t[e].match(/[+\-*/^]/g)?(s=t[e],n="operation"):"("===t[e]?(s="(",n="("):")"===t[e]?(s=")",n=")"):","===t[e]?(s=",",n="function-argument"):t.match(/^(sin|cos|tan)/g)?(s=")",n=")"):(s=i[0],n="monom",""===s&&(s=t[e],n="monom",console.log("SHUTING YARD - NEXT TOKEN: error at ",e))),[s,e+s.length,n]}Uniformizer(t){let e;return e=t.replace(/\)\(/g,")*("),e=e.replace(/([\da-z])(\()/g,"$1*$2"),e=e.replace(/(\))([\da-z])/g,"$1*$2"),e}parse(t){let e=[],i=[],s={"^":4,"*":3,"/":3,"+":2,"-":2},n={"^":"right","*":"left","/":"left","+":"left","-":"left"},r="",o=0,h="";t=this.Uniformizer(t);let l,a=50;for(;o<t.length;){if(a--,0===a){console.log("SECURITY LEVEL 1 EXIT");break}switch([r,o,h]=this.NextToken(t,o),h){case"monom":e.push(r);break;case"operation":if(i.length>0){let t=i[i.length-1];for(l=50;t in n&&("left"===n[r]&&s[r]<=s[t]||"right"===n[r]&&s[r]<s[t]);){if(l--,0===l){console.log("SECURITY LEVEL 2 OPERATION EXIT");break}e.push(i.pop()||""),t=i[i.length-1]}}i.push(r);break;case"trigo":i.push(r);break;case"function-argument":for(l=50;"("!==i[i.length-1]&&i.length>0;){if(l--,0===l){console.log("SECURITY LEVEL 2 FUNCTION ARGUMENT EXIT");break}e.push(i.pop()||"")}break;case"(":i.push(r),"-"===t[o]&&e.push("0");break;case")":for(l=50;"("!==i[i.length-1]&&i.length>1;){if(l--,0===l){console.log("SECURITY LEVEL 2 CLOSING PARENTHESE EXIT");break}e.push(i.pop()||"")}i.pop();break;default:console.log(`SHUTING YARD: ${h} : ${r} `)}}return this._rpn=e.concat(i.reverse()),this}get rpn(){return this._rpn}}}},e={};function i(s){var n=e[s];if(void 0!==n)return n.exports;var r=e[s]={exports:{}};return t[s](r,r.exports,i),r.exports}(()=>{const t=i(506),e=i(956),s=i(330),n=i(937),r=i(38),o=i(760),h=i(554),l=i(107),a=i(586),u=i(9),c=i(557),m=i(164);window.Pi={Numeric:e.Numeric,Fraction:t.Fraction,Root:s.Nthroot,Monom:n.Monom,Polynom:r.Polynom,Equation:o.Equation,LinearSystem:h.LinearSystem,Rational:l.Rational,Geometry:{Vector:a.Vector,Point:c.Point,Line:u.Line,Triangle:m.Triangle}},e.Numeric,t.Fraction,s.Nthroot,n.Monom,r.Polynom,o.Equation,h.LinearSystem,l.Rational,a.Vector,c.Point,u.Line,m.Triangle})()})();
//# sourceMappingURL=pi.js.map